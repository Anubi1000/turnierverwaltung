/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = {
  "/ping": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": string;
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/auth": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["AuthInfoDto"];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/tournaments": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ListTournamentDto"][];
          };
        };
      };
    };
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["TournamentEditDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": number;
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/tournaments/{tournamentId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          tournamentId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["TournamentDetailDto"];
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          tournamentId: number;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["TournamentEditDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          tournamentId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/tournaments/{tournamentId}/clubs": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          tournamentId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ListClubDto"][];
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          tournamentId: number;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ClubEditDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": number;
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/clubs/{clubId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          clubId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ClubDetailDto"];
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          clubId: number;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ClubEditDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          clubId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/tournaments/{tournamentId}/disciplines": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          tournamentId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ListDisciplineDto"][];
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          tournamentId: number;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["DisciplineEditDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": number;
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/disciplines/{disciplineId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          disciplineId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["DisciplineDetailDto"];
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          disciplineId: number;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["DisciplineEditDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          disciplineId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/tournaments/{tournamentId}/participants": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          tournamentId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ListParticipantDto"][];
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          tournamentId: number;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ParticipantEditDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": number;
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/participants/{participantId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          participantId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ParticipantDetailDto"];
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          participantId: number;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ParticipantEditDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          participantId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/participants/{participantId}/results/{disciplineId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          participantId: number;
          disciplineId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ParticipantResultDetailDto"];
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          participantId: number;
          disciplineId: number;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ParticipantResultEditDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/tournaments/{tournamentId}/team_disciplines": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          tournamentId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ListTeamDisciplineDto"][];
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          tournamentId: number;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["TeamDisciplineEditDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": number;
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/team_disciplines/{teamDisciplineId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          teamDisciplineId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["TeamDisciplineDetailDto"];
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          teamDisciplineId: number;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["TeamDisciplineEditDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          teamDisciplineId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
};
export type webhooks = Record<string, never>;
export type components = {
  schemas: {
    AuthInfoDto: {
      isAuthenticated: boolean;
    };
    ClubDetailDto: {
      /** Format: int32 */
      id: number;
      /** Format: int32 */
      tournamentId: number;
      name: string;
      /** Format: int32 */
      memberCount: number;
    };
    ClubEditDto: {
      name: string;
    };
    DisciplineDetailDto: {
      /** Format: int32 */
      id: number;
      /** Format: int32 */
      tournamentId: number;
      name: string;
      /** Format: int32 */
      amountOfBestRoundsToShow: number;
      areGendersSeparated: boolean;
      values: components["schemas"]["DisciplineDetailDto_Value"][];
    };
    DisciplineDetailDto_Value: {
      name: string;
      isAdded: boolean;
    };
    DisciplineEditDto: {
      name: string;
      /** Format: int32 */
      amountOfBestRoundsToShow: number;
      areGendersSeparated: boolean;
      values: components["schemas"]["DisciplineEditDto_Value"][];
    };
    DisciplineEditDto_Value: {
      name: string;
      isAdded: boolean;
    };
    /** @enum {unknown} */
    Gender: "Male" | "Female";
    ListClubDto: {
      /** Format: int32 */
      id: number;
      name: string;
    };
    ListDisciplineDto: {
      /** Format: int32 */
      id: number;
      name: string;
    };
    ListParticipantDto: {
      /** Format: int32 */
      id: number;
      name: string;
      /** Format: int32 */
      startNumber: number;
    };
    ListTeamDisciplineDto: {
      /** Format: int32 */
      id: number;
      name: string;
    };
    ListTournamentDto: {
      /** Format: int32 */
      id: number;
      name: string;
      /** Format: int64 */
      date: number;
    };
    ParticipantDetailDto: {
      /** Format: int32 */
      id: number;
      name: string;
      /** Format: int32 */
      startNumber: number;
      gender: components["schemas"]["Gender"];
      /** Format: int32 */
      clubId: number;
      clubName: string;
      disciplines: components["schemas"]["ParticipantDetailDto_Discipline"][];
    };
    ParticipantDetailDto_Discipline: {
      /** Format: int32 */
      id: number;
      name: string;
    };
    ParticipantEditDto: {
      name: string;
      /** Format: int32 */
      startNumber: number;
      gender: components["schemas"]["Gender"];
      /** Format: int32 */
      clubId: number;
    };
    ParticipantResultDetailDto: {
      disciplineValues: components["schemas"]["ParticipantResultDetailDto_DisciplineValue"][];
      rounds: components["schemas"]["ParticipantResultDetailDto_RoundResult"][];
    };
    ParticipantResultDetailDto_DisciplineValue: {
      name: string;
      isAdded: boolean;
    };
    ParticipantResultDetailDto_RoundResult: {
      values: number[];
    };
    ParticipantResultEditDto: {
      rounds: components["schemas"]["ParticipantResultEditDto_RoundResult"][];
    };
    ParticipantResultEditDto_RoundResult: {
      values: number[];
    };
    TeamDisciplineDetailDto: {
      name: string;
      basedOn: components["schemas"]["TeamDisciplineDetailDto_Discipline"][];
    };
    TeamDisciplineDetailDto_Discipline: {
      /** Format: int32 */
      id: number;
      name: string;
    };
    TeamDisciplineEditDto: {
      name: string;
      basedOn: number[];
    };
    TournamentDetailDto: {
      /** Format: int32 */
      id: number;
      name: string;
      /** Format: int64 */
      date: number;
      /** Format: int32 */
      teamSize: number;
      /** Format: int32 */
      clubCount: number;
      /** Format: int32 */
      disciplineCount: number;
      /** Format: int32 */
      participantCount: number;
      /** Format: int32 */
      teamCount: number;
    };
    TournamentEditDto: {
      name: string;
      /** Format: int64 */
      date: number;
      /** Format: int32 */
      teamSize: number;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
};
export type AuthInfoDto = components["schemas"]["AuthInfoDto"];
export type ClubDetailDto = components["schemas"]["ClubDetailDto"];
export type ClubEditDto = components["schemas"]["ClubEditDto"];
export type DisciplineDetailDto = components["schemas"]["DisciplineDetailDto"];
export type DisciplineDetailDtoValue =
  components["schemas"]["DisciplineDetailDto_Value"];
export type DisciplineEditDto = components["schemas"]["DisciplineEditDto"];
export type DisciplineEditDtoValue =
  components["schemas"]["DisciplineEditDto_Value"];
export type Gender = components["schemas"]["Gender"];
export type ListClubDto = components["schemas"]["ListClubDto"];
export type ListDisciplineDto = components["schemas"]["ListDisciplineDto"];
export type ListParticipantDto = components["schemas"]["ListParticipantDto"];
export type ListTeamDisciplineDto =
  components["schemas"]["ListTeamDisciplineDto"];
export type ListTournamentDto = components["schemas"]["ListTournamentDto"];
export type ParticipantDetailDto =
  components["schemas"]["ParticipantDetailDto"];
export type ParticipantDetailDtoDiscipline =
  components["schemas"]["ParticipantDetailDto_Discipline"];
export type ParticipantEditDto = components["schemas"]["ParticipantEditDto"];
export type ParticipantResultDetailDto =
  components["schemas"]["ParticipantResultDetailDto"];
export type ParticipantResultDetailDtoDisciplineValue =
  components["schemas"]["ParticipantResultDetailDto_DisciplineValue"];
export type ParticipantResultDetailDtoRoundResult =
  components["schemas"]["ParticipantResultDetailDto_RoundResult"];
export type ParticipantResultEditDto =
  components["schemas"]["ParticipantResultEditDto"];
export type ParticipantResultEditDtoRoundResult =
  components["schemas"]["ParticipantResultEditDto_RoundResult"];
export type TeamDisciplineDetailDto =
  components["schemas"]["TeamDisciplineDetailDto"];
export type TeamDisciplineDetailDtoDiscipline =
  components["schemas"]["TeamDisciplineDetailDto_Discipline"];
export type TeamDisciplineEditDto =
  components["schemas"]["TeamDisciplineEditDto"];
export type TournamentDetailDto = components["schemas"]["TournamentDetailDto"];
export type TournamentEditDto = components["schemas"]["TournamentEditDto"];
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
